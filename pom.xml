<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright © 2019 collin (1634753825@qq.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.3</version>
    </parent>
    <groupId>io.github.smart-cloud</groupId>
    <artifactId>smart-cloud</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>smart-api-core</module>
        <module>smart-cloud-starter</module>
        <module>smart-code-generate</module>
        <module>smart-common-pojo</module>
        <module>smart-common-web</module>
        <module>smart-constants</module>
        <module>smart-exception</module>
        <module>smart-mask</module>
        <module>smart-test</module>
        <module>smart-utility</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <spring.boot>2.6.6</spring.boot>
        <spring-cloud>2021.0.0</spring-cloud>
        <spring-cloud-alibaba>2021.1</spring-cloud-alibaba>
        <spring-cloud-gateway>3.1.0</spring-cloud-gateway>
        <openfeign>3.1.0</openfeign>
        <spring.boot.admin>2.6.3</spring.boot.admin>
        <hystrix>2.2.10.RELEASE</hystrix>
        <redisson>3.17.0</redisson>
        <mybatis-plus>3.5.1</mybatis-plus>
        <dynamic-datasource>3.5.1</dynamic-datasource>
        <shardingsphere-jdbc>5.1.0</shardingsphere-jdbc>
        <seata>1.4.2</seata>
        <mysql>8.0.28</mysql>
        <podam>7.2.8.RELEASE</podam>
        <guava>31.1-jre</guava>
        <reflections>0.10.2</reflections>
        <jasypt>3.0.4</jasypt>
        <commons-codec>1.15</commons-codec>
        <commons-io>2.11.0</commons-io>
        <servlet>4.0.1</servlet>
        <xxl-job>2.3.0</xxl-job>
        <commons-collections4>4.4</commons-collections4>
        <log4j-layout-template-json>2.17.1</log4j-layout-template-json>
        <maven-pmd-plugin>3.15.0</maven-pmd-plugin>
        <p3c-pmd>2.1.1</p3c-pmd>
        <jacoco-maven-plugin>0.8.7</jacoco-maven-plugin>
        <embedded-redis>0.7.3</embedded-redis>
        <rabbitmq-mock>1.1.1</rabbitmq-mock>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- 私有jar start -->
            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-api-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-api-annotation</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-user-context</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-mask</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-utility</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-common-pojo</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-common-web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-constants</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-exception</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-code-generate</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-configure</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-job</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-locale</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-log4j2</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-method-log</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-mock</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-mp-shardingjdbc</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-mybatis-plus</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-rabbitmq</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-redis</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-feign</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-global-id</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-test-core</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-test-mock-rabbitmq</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.github.smart-cloud</groupId>
                <artifactId>smart-cloud-starter-test-mock-redis</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- 私有jar end -->

            <!-- 第三方jar start -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata}</version>
            </dependency>


            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-openfeign-core</artifactId>
                <version>${openfeign}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${openfeign}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${hystrix}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
                <version>${hystrix}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix-hystrix</artifactId>
                <version>${hystrix}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>${spring-cloud-gateway}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring.boot.admin}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>spring-boot-starter-logging</artifactId>
                        <groupId>org.springframework.boot</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring.boot.admin}</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>spring-boot-starter-logging</artifactId>
                        <groupId>org.springframework.boot</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${dynamic-datasource}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>
                <version>${shardingsphere-jdbc}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql}</version>
            </dependency>

            <!-- mock -->
            <dependency>
                <groupId>uk.co.jemos.podam</groupId>
                <artifactId>podam</artifactId>
                <version>${podam}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava}</version>
            </dependency>

            <!-- 反射工具类 -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections}</version>
            </dependency>

            <!-- 配置文件加解密 -->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot</artifactId>
                <version>${jasypt}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io}</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet}</version>
            </dependency>

            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-layout-template-json</artifactId>
                <version>${log4j-layout-template-json}</version>
            </dependency>

            <!--用户redis集成测试-->
            <dependency>
                <groupId>it.ozimov</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>${embedded-redis}</version>
            </dependency>

            <!--rabbitmq集成测试-->
            <dependency>
                <groupId>com.github.fridujo</groupId>
                <artifactId>rabbitmq-mock</artifactId>
                <version>${rabbitmq-mock}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerVersion>${java.version}</compilerVersion>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <debug>true</debug>
                    <optimize>true</optimize>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <!-- 生成source源码包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>4.1</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <licenseSets>
                        <licenseSet>
                            <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
                            <excludes>
                                <exclude>README.md</exclude>
                                <exclude>src/test/resources/**</exclude>
                                <exclude>src/main/resources/**</exclude>
                            </excludes>
                        </licenseSet>
                    </licenseSets>
                    <properties>
                        <owner>collin</owner>
                        <email>1634753825@qq.com</email>
                        <year>2019</year>
                    </properties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin}</version>
                <configuration>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <!--扫描级别，小于等于这个级别的错误代码将不通过扫描。不配默认是5-->
                    <minimumPriority>5</minimumPriority>
                    <printFailingErrors>true</printFailingErrors>
                    <linkXRef>true</linkXRef>
                    <rulesets>
                        <ruleset>rulesets/java/ali-comment.xml</ruleset>
                        <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
                        <ruleset>rulesets/java/ali-constant.xml</ruleset>
                        <ruleset>rulesets/java/ali-exception.xml</ruleset>
                        <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
                        <ruleset>rulesets/java/ali-naming.xml</ruleset>
                        <ruleset>rulesets/java/ali-oop.xml</ruleset>
                        <ruleset>rulesets/java/ali-orm.xml</ruleset>
                        <ruleset>rulesets/java/ali-other.xml</ruleset>
                        <ruleset>rulesets/java/ali-set.xml</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.alibaba.p3c</groupId>
                        <artifactId>p3c-pmd</artifactId>
                        <version>${p3c-pmd}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- 检查代码覆盖率 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- rules里面指定覆盖规则 -->
                    <!-- <rules>
                        <rule implementation="org.jacoco.maven.RuleConfiguration">
                            <element>BUNDLE</element>
                            <limits> 指定行覆盖到85%
                                <limit implementation="org.jacoco.report.check.Limit">
                                    <counter>LINE</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.85</minimum>
                                </limit> 指定分支覆盖到90%
                                <limit implementation="org.jacoco.report.check.Limit">
                                    <counter>BRANCH</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.9</minimum>
                                </limit> 指定方法覆盖到85%
                                <limit implementation="org.jacoco.report.check.Limit">
                                    <counter>METHOD</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.85</minimum>
                                </limit> 指定类覆盖到90%，不能遗失任何类
                                <limit implementation="org.jacoco.report.check.Limit">
                                    <counter>CLASS</counter>
                                    <value>MISSEDCOUNT</value>
                                    <maximum>0.1</maximum>
                                </limit>
                            </limits>
                        </rule>
                    </rules> -->
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin}</version>
            </plugin>
        </plugins>
    </reporting>

    <!-- 使用aliyun镜像 -->
    <repositories>
        <repository>
            <id>aliyun</id>
            <name>aliyun</name>
            <url>https://maven.aliyun.com/repository/public</url>
        </repository>
    </repositories>
</project>